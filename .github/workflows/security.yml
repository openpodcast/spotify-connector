name: Security

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

env:
  PYTHONUNBUFFERED: 1

jobs:
  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-security-${{ hashFiles('**/setup.py', '**/Pipfile.lock') }}

    - name: Install security tools and package
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit semgrep
        pip install -e .

    - name: Run Safety check for known vulnerabilities
      run: |
        safety check --json --output safety-report.json || true
        safety check --short-report

    - name: Run Bandit security linter
      run: |
        bandit -r spotifyconnector/ -f json -o bandit-report.json || true
        bandit -r spotifyconnector/

    - name: Run Semgrep security scanner
      run: |
        semgrep --config=auto spotifyconnector/ --json --output=semgrep-report.json || true
        semgrep --config=auto spotifyconnector/

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports-${{ github.sha }}
        path: |
          safety-report.json
          bandit-report.json
          semgrep-report.json

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 5
    
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate
