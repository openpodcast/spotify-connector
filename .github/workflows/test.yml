name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Quick Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-quick-${{ hashFiles('**/setup.py', '**/Pipfile.lock') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -e .

    - name: Install package dependencies
      run: |
        if [ -f "Pipfile" ]; then
          pip install pipenv
          pipenv requirements > requirements.txt
          pip install -r requirements.txt
        fi
      continue-on-error: true

    - name: Run connection handling tests
      run: |
        python -m pytest tests/test_connection_handling.py -v --tb=short

    - name: Run all tests
      run: |
        python -m pytest tests/ -v --tb=short --cov=spotifyconnector --cov-report=term-missing

    - name: Test import
      run: |
        python -c "import spotifyconnector; print('Package imports successfully')"

  test-matrix:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -e .

    - name: Install package dependencies
      run: |
        if [ -f "Pipfile" ]; then
          pip install pipenv
          pipenv requirements > requirements.txt
          pip install -r requirements.txt
        fi
      continue-on-error: true

    - name: Run tests
      run: |
        python -m pytest tests/ -v --tb=short
